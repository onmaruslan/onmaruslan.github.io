{"version":3,"sources":["store/types/authTypes.ts","components/Input/Input.tsx","store/actions/authActions.ts","store/types/cardsTypes.ts","hooks/useTypedSelector.ts","components/Forms/SignInForm.tsx","components/Forms/SignUpForm.tsx","components/Forms/RestoreForm.tsx","pages/Auth/Auth.tsx","store/actions/cardsActions.ts","functions.ts","components/Plus/Plus.tsx","components/Logout/Logout.tsx","components/CardList/CardItem.tsx","components/CardList/CardList.tsx","components/Card/Card.tsx","hooks/useDebounce.ts","pages/Home/Home.tsx","App.tsx","store/reducers/authReducer.ts","store/reducers/cardsReducer.ts","store/configureStore.ts","index.tsx"],"names":["AuthActionTypes","Input","forwardRef","ref","type","placeholder","label","errorText","id","cls","push","$label","htmlFor","viewBox","d","$error","className","width","height","fill","xmlns","join","name","changeUser","user","CHANGE_USER","payload","CardsActionTypes","setError","error","ERROR","setSuccess","success","SUCCESS","useTypedSelector","useSelector","SignInForm","dispatch","useDispatch","auth","state","schema","yup","shape","email","required","password","min","remember","useForm","mode","resolver","yupResolver","register","handleSubmit","errors","useEffect","onSubmit","e","session","firebase","setPersistence","Auth","Persistence","then","signInWithEmailAndPassword","userCredential","console","log","localStorage","setItem","JSON","stringify","sessionStorage","catch","code","message","to","SignUpForm","history","useHistory","passwordConfirm","oneOf","createUserWithEmailAndPassword","RestoreForm","sendPasswordResetEmail","title","formRender","vw","document","documentElement","clientWidth","$authWrap","useRef","useState","stateHeight","setStateHeight","slug","useParams","current","Array","from","children","map","item","scrollHeight","reduce","sum","style","setNewTodosAction","idCard","newTodos","SET_NEW_TODOS","changePositionCardDispatch","elem","getTransformElem","transform","replace","split","startXElem","startYElem","startXMouse","pageX","startYMouse","pageY","zIndex","transition","onmousemove","x","y","CHANGE_POSITION_CARD","changePositionCard","onmouseup","removeCardDispatch","REMOVE_CARD","userEmail","currentUser","db","firestore","collection","doc","String","delete","removeCardDB","updateCardsFromDB","parse","getItem","get","querySnapshot","forEach","card","data","position","todos","ADD_CARD","addCard","Plus","cards","Set","trim","add","onClick","ADD_NEW_CARD","Date","now","Logout","signOut","clear","RESET_CARDS","CardItem","todoDB","cardID","onChange","idTodo","target","value","SET_TITLE_TODO","data-movable-handle","REMOVE_TODO","CardList","filter","values","removableByMove","oldIndex","newIndex","arrayRemove","arrayMove","renderList","props","renderItem","isSelected","isDragged","isOutOfBounds","background","animationName","opacity","Card","cardDB","styles","setStyles","debouncedUpdateCard","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","useDebounce","$card","ondragstart","userCard","set","updateCardDB","SET_TITLE","maxLength","onMouseDown","ADD_TODO","Home","App","basename","path","exact","component","initialState","initialTodo","initialCard","rootReducer","combineReducers","action","cardExist","some","newCardTodo","newCardRemoveTodo","i","newCardTitle","newTitleTodo","newCardPosition","newCardTodos","store","createStore","composeWithDevTools","applyMiddleware","thunk","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.eba27189.chunk.js","sourcesContent":["export interface AuthState {\r\n  user: object | undefined | boolean\r\n  error: null | string\r\n  success: null | string\r\n}\r\n\r\nexport enum AuthActionTypes {\r\n  CHANGE_USER = 'CHANGE_USER',\r\n  ERROR = 'ERROR',\r\n  SUCCESS = 'SUCCESS',\r\n}\r\n\r\ninterface changeUserAction {\r\n  type: AuthActionTypes.CHANGE_USER,\r\n  payload: object | undefined | boolean\r\n}\r\ninterface errorAction {\r\n  type: AuthActionTypes.ERROR\r\n  payload: string | null\r\n}\r\ninterface successAction {\r\n  type: AuthActionTypes.SUCCESS\r\n  payload: string | null\r\n}\r\n\r\nexport type AuthAction = changeUserAction | errorAction | successAction","import React, {forwardRef} from 'react'\r\n\r\ninterface Props {\r\n  type: string\r\n  placeholder?: string\r\n  label: string\r\n  errorText?: string\r\n  id?: string\r\n}\r\n\r\n\r\nconst Input = forwardRef<HTMLInputElement, Props>(({type, placeholder, label, errorText, id}, ref) => {\r\n\r\n  const cls = ['auth__input']\r\n  if (errorText) cls.push('error')\r\n  if (type === 'checkbox') cls[0] = 'auth__checkbox'\r\n\r\n  const $label = (\r\n    (type !== 'checkbox')\r\n      ? <label htmlFor={id || type}>{label}</label>\r\n      : <>\r\n        <label htmlFor={id || type}>\r\n          <svg viewBox=\"0 0 28 28\"><path d=\"M24.3124 7.81053L10.2881 21.8348L3.68848 15.2351L5.33348 13.5901L10.2881 18.5331L22.6674 6.16553L24.3124 7.81053Z\"></path></svg>\r\n        </label>\r\n        <span>{label}</span>\r\n      </>\r\n  )\r\n\r\n  const $error = (\r\n    <div className=\"auth-error\">\r\n      <div className=\"auth-error__text\">{errorText}</div>\r\n      <div className=\"auth-error__cross\">\r\n        <svg width=\"24\"\r\n             height=\"24\"\r\n             viewBox=\"0 0 24 24\"\r\n             fill=\"none\"\r\n             xmlns=\"http://www.w3.org/2000/svg\">\r\n          <path d=\"M12 22C9.34711 22.0023 6.80218 20.9495 4.9263 19.0737C3.05042 17.1978 1.99762 14.6528 2 11.9999V11.7999C2.08179 7.79217 4.5478 4.2201 8.26637 2.72301C11.9849 1.22591 16.2381 2.09284 19.074 4.92595C21.9365 7.78603 22.7932 12.0893 21.2443 15.8276C19.6955 19.5659 16.0465 22.0023 12 22ZM12 13.4099L14.59 15.9999L16 14.5899L13.41 11.9999L16 9.40995L14.59 7.99995L12 10.5899L9.41001 7.99995L8.00001 9.40995L10.59 11.9999L8.00001 14.5899L9.41001 15.9999L12 13.4109V13.4099Z\"\r\n                fill=\"#FC4B50\"></path>\r\n        </svg>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <div className={cls.join(' ')}>\r\n      <input type={type}\r\n             id={id || type}\r\n             name={id || type}\r\n             ref={ref}\r\n             placeholder={placeholder}/>\r\n      {$label}\r\n\r\n      {errorText && $error}\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default Input","import { Dispatch } from \"redux\"\r\nimport firebase from 'firebase/app'\r\nimport 'firebase/auth';        // for authentication\r\n\r\nimport {AuthAction, AuthActionTypes} from '../types/authTypes'\r\n\r\nexport function changeUser(user: object | undefined | boolean): AuthAction {\r\n  return { type: AuthActionTypes.CHANGE_USER, payload: user }\r\n}\r\n\r\nexport const setError = (error: null | string): AuthAction => {\r\n  return {type: AuthActionTypes.ERROR, payload: error}\r\n}\r\nexport const setSuccess = (success: null | string): AuthAction => {\r\n  return {type: AuthActionTypes.SUCCESS, payload: success}\r\n}\r\n\r\nexport const signIn = (email: string, password: string, remember: boolean) => {\r\n  return (dispatch: Dispatch<AuthAction>) => {\r\n    const session = (remember) ? 'LOCAL' : 'SESSION'\r\n    firebase.auth().setPersistence(firebase.auth.Auth.Persistence[session])\r\n      .then(() => {\r\n        return firebase.auth().signInWithEmailAndPassword(email, password)\r\n          .then((userCredential: any) => {\r\n            console.log(userCredential.user)\r\n            dispatch(changeUser(userCredential.user));\r\n\r\n            (remember)\r\n              ? localStorage.setItem('user', JSON.stringify(userCredential.user))\r\n              : sessionStorage.setItem('user', JSON.stringify(userCredential.user))\r\n\r\n          })\r\n      })\r\n      .catch((error) => {\r\n        dispatch(setError(error.code))\r\n        switch (error.code) {\r\n          case 'auth/user-not-found':\r\n            dispatch(setError('Email or password entered incorrectly'))\r\n            break;\r\n          case 'auth/wrong-password':\r\n            dispatch(setError('Email or password entered incorrectly'))\r\n            break;\r\n          default:\r\n            dispatch(setError(error.message))\r\n        }\r\n      });\r\n\r\n  }\r\n}\r\n\r\nexport const signUp = (email: string, password: string) => {\r\n  return (dispatch: Dispatch<AuthAction>) => {\r\n    firebase.auth().createUserWithEmailAndPassword(email, password)\r\n      .then((userCredential: any) => {\r\n        dispatch(changeUser(userCredential.user))\r\n        localStorage.setItem('user', JSON.stringify(userCredential.user))\r\n      })\r\n      .catch((error) => {\r\n        switch (error.code) {\r\n          case 'auth/email-already-in-use':\r\n            dispatch(setError('This email is already in use'))\r\n            break;\r\n          default:\r\n            dispatch(setError(error.message))\r\n        }\r\n      })\r\n  }\r\n}\r\n\r\nexport const sendPasswordReset = (email: string) => {\r\n  return (dispatch: Dispatch<AuthAction>) => {\r\n    firebase.auth().sendPasswordResetEmail(email).then(function() {\r\n      dispatch(setSuccess(`The letter was sent to the ${email}`))\r\n\r\n    }).catch(function(error) {\r\n      switch (error.code) {\r\n        case 'auth/user-not-found':\r\n          dispatch(setError('This user is not registered'))\r\n          break;\r\n        default:\r\n          dispatch(setError(error.message))\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n\r\n\r\nexport const signOut = () => {\r\n  return (dispatch: Dispatch<AuthAction>) => {\r\n\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => {\r\n        dispatch(changeUser(false))\r\n        localStorage.clear()\r\n        sessionStorage.clear()\r\n      })\r\n  }\r\n}","interface IPositionCard {\r\n  x: number\r\n  y: number\r\n}\r\n\r\nexport interface ISetTodoTitle {\r\n  title: string\r\n  idCard: number\r\n  idTodo: number\r\n}\r\nexport interface ITodo {\r\n  title: string\r\n  id: number\r\n}\r\nexport interface ICard {\r\n  title: string\r\n  id: number\r\n  position: IPositionCard\r\n  todos: Array<ITodo>\r\n}\r\n\r\nexport interface CardsState {\r\n  cards: Array<ICard>\r\n}\r\n\r\nexport enum CardsActionTypes {\r\n  ADD_NEW_CARD = 'ADD_NEW_CARD',\r\n  ADD_CARD = 'ADD_CARD',\r\n  REMOVE_CARD = 'REMOVE_CARD',\r\n  ADD_TODO = 'ADD_TODO',\r\n  REMOVE_TODO = 'REMOVE_TODO',\r\n  SET_TITLE = 'SET_TITLE',\r\n  SET_TITLE_TODO = 'SET_TITLE_TODO',\r\n  CHANGE_POSITION_CARD = 'CHANGE_POSITION_CARD',\r\n  SET_NEW_TODOS = 'SET_NEW_TODOS',\r\n  RESET_CARDS = 'RESET_CARDS'\r\n\r\n}\r\n\r\n\r\n\r\ninterface addNewCardAction {\r\n  type: CardsActionTypes.ADD_NEW_CARD\r\n  payload: number\r\n}\r\ninterface addCardAction {\r\n  type: CardsActionTypes.ADD_CARD\r\n  payload: ICard\r\n}\r\ninterface removeCardAction {\r\n  type: CardsActionTypes.REMOVE_CARD\r\n  payload: number\r\n}\r\n\r\ninterface addTodoAction {\r\n  type: CardsActionTypes.ADD_TODO\r\n  payload: { idCard: number, idTodo: number }\r\n}\r\ninterface removeTodoAction {\r\n  type: CardsActionTypes.REMOVE_TODO\r\n  payload: { idCard: number, idTodo: number }\r\n}\r\n\r\ninterface setTitleAction {\r\n  type: CardsActionTypes.SET_TITLE\r\n  payload: ITodo\r\n}\r\ninterface setTitleTodoAction {\r\n  type: CardsActionTypes.SET_TITLE_TODO\r\n  payload: ISetTodoTitle\r\n}\r\n\r\ninterface changePositionCardAction {\r\n  type: CardsActionTypes.CHANGE_POSITION_CARD\r\n  payload: {idCard: number, x: number, y: number}\r\n}\r\n\r\ninterface setNewTodosAction {\r\n  type: CardsActionTypes.SET_NEW_TODOS\r\n  payload: {newTodos: ITodo[], idCard: number}\r\n}\r\n\r\ninterface resetCardsAction {\r\n  type: CardsActionTypes.RESET_CARDS\r\n}\r\nexport type CardsAction =\r\n  addNewCardAction\r\n  | addTodoAction\r\n  | setTitleAction\r\n  | setTitleTodoAction\r\n  | removeCardAction\r\n  | removeTodoAction\r\n  | changePositionCardAction\r\n  | setNewTodosAction\r\n  | addCardAction\r\n  | resetCardsAction","import {TypedUseSelectorHook, useSelector} from 'react-redux'\r\nimport {RootState} from '../store/configureStore'\r\n\r\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector","import React, {useEffect} from 'react'\r\nimport {useDispatch} from 'react-redux'\r\nimport {Link} from 'react-router-dom'\r\nimport Input from '../Input/Input'\r\nimport {setError, setSuccess, signIn} from '../../store/actions/authActions'\r\nimport {useTypedSelector} from '../../hooks/useTypedSelector'\r\nimport * as yup from 'yup'\r\nimport {useForm} from 'react-hook-form'\r\nimport {yupResolver} from '@hookform/resolvers/yup'\r\n\r\ninterface formData {\r\n  email: string\r\n  password: string\r\n  remember: boolean\r\n}\r\n\r\nconst SignInForm: React.FC = () => {\r\n  const dispatch = useDispatch()\r\n  const auth = useTypedSelector(state => state.auth)\r\n\r\n  const schema = yup.object().shape({\r\n    email: yup\r\n      .string()\r\n      .email('Email should have correct format')\r\n      .required('Required field'),\r\n    password: yup\r\n      .string()\r\n      .required('Required field')\r\n      .min(6, 'Minimum 6 characters'),\r\n    remember: yup\r\n      .boolean()\r\n  })\r\n\r\n  const {register, handleSubmit, errors} = useForm({\r\n    mode: 'onBlur',\r\n    resolver: yupResolver(schema)\r\n  })\r\n\r\n  const onSubmit = (e: formData) => {\r\n    dispatch(signIn(e.email, e.password, e.remember))\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(setError(null))\r\n      dispatch(setSuccess(null))\r\n    }\r\n  },[])\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit(onSubmit)}\r\n            className=\"auth\"\r\n            id=\"auth-signin\">\r\n        <Input type=\"email\"\r\n               placeholder=\"example@email.com\"\r\n               ref={register}\r\n               errorText={errors.email?.message}\r\n               label=\"Email\"/>\r\n        <Input type=\"password\"\r\n               placeholder=\"**************\"\r\n               ref={register}\r\n               errorText={errors.password?.message}\r\n               label=\"Password\"/>\r\n        <Input type=\"checkbox\"\r\n               ref={register}\r\n               errorText={errors.remember?.message}\r\n               label=\"Remember me\"\r\n               id=\"remember\"/>\r\n\r\n        <button className=\"auth__btn\"><span>Login</span></button>\r\n        {(auth.error) ? <div className='auth__error'>{auth.error}</div> : null}\r\n        {(auth.success) ? <div className='auth__success'>{auth.success}</div> : null}\r\n      </form>\r\n\r\n      <div className=\"auth__link\">\r\n        <Link to={'/auth/registration'}>Sign up</Link>\r\n        <Link to={'/auth/restore'}>Forgot password?</Link>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SignInForm","import React, { useEffect } from 'react'\r\nimport {useDispatch} from 'react-redux'\r\nimport {Link, useHistory } from 'react-router-dom'\r\nimport {useForm} from 'react-hook-form'\r\nimport {yupResolver} from '@hookform/resolvers/yup'\r\nimport * as yup from 'yup'\r\n\r\nimport Input from '../Input/Input'\r\nimport {setError, signUp} from '../../store/actions/authActions'\r\nimport {useTypedSelector} from '../../hooks/useTypedSelector'\r\n\r\n\r\n// interface Props {\r\n//   onClick: () => void;\r\n// }\r\ninterface formData {\r\n  email: string\r\n  password: string\r\n}\r\n\r\nconst SignUpForm: React.FC = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch()\r\n  const auth = useTypedSelector(state => state.auth)\r\n\r\n  const schema = yup.object().shape({\r\n    email: yup\r\n      .string()\r\n      .email('Email should have correct format')\r\n      .required('Required field'),\r\n    password: yup\r\n      .string()\r\n      .required('Required field')\r\n      .min(6, 'Minimum 6 characters'),\r\n    passwordConfirm: yup\r\n      .string()\r\n      .oneOf([yup.ref('password'), null], 'Passwords must match')\r\n  })\r\n\r\n  const {register, handleSubmit, errors} = useForm({\r\n    mode: 'onBlur',\r\n    resolver: yupResolver(schema)\r\n  })\r\n\r\n  const onSubmit = (e: formData) => {\r\n    dispatch(signUp(e.email, e.password))\r\n    history.push('/')\r\n\r\n  }\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(setError(null))\r\n    }\r\n  },[])\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit(onSubmit)}\r\n            className=\"auth\"\r\n            id=\"auth-signup\">\r\n        <Input type=\"email\"\r\n               placeholder=\"example@email.com\"\r\n               ref={register}\r\n               errorText={errors.email?.message}\r\n               label=\"Email\"/>\r\n        <Input type=\"password\"\r\n               placeholder=\"**************\"\r\n               ref={register}\r\n               errorText={errors.password?.message}\r\n               label=\"Password\"/>\r\n        <Input type=\"password\"\r\n               placeholder=\"**************\"\r\n               label=\"Confirm password\"\r\n               ref={register}\r\n               errorText={errors.passwordConfirm?.message}\r\n               id=\"passwordConfirm\"/>\r\n        <button className=\"auth__btn\"><span>Register</span></button>\r\n        {(auth.error) ? <div className='auth__error'>{auth.error}</div> : null}\r\n      </form>\r\n      <div className=\"auth__link\">\r\n        <Link to={'/auth/login'}>Already have an account</Link>\r\n        {/*<a href=\"./restore.html\">Уже есть аккаунт</a>*/}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SignUpForm","import React from 'react'\r\nimport Input from '../Input/Input'\r\nimport {Link, Redirect} from 'react-router-dom'\r\nimport {useTypedSelector} from '../../hooks/useTypedSelector'\r\nimport {useDispatch} from 'react-redux'\r\nimport * as yup from 'yup'\r\nimport {useForm} from 'react-hook-form'\r\nimport {yupResolver} from '@hookform/resolvers/yup'\r\nimport {sendPasswordReset} from '../../store/actions/authActions'\r\n\r\n\r\ninterface formData {\r\n  email: string\r\n}\r\n\r\n\r\nconst RestoreForm: React.FC = () => {\r\n  const dispatch = useDispatch()\r\n  const auth = useTypedSelector(state => state.auth)\r\n\r\n  const schema = yup.object().shape({\r\n    email: yup\r\n      .string()\r\n      .email('Email should have correct format')\r\n      .required('Required field')\r\n  })\r\n  const {register, handleSubmit, errors} = useForm({\r\n    mode: 'onBlur',\r\n    resolver: yupResolver(schema)\r\n  })\r\n  const onSubmit = (e: formData) => {\r\n    dispatch(sendPasswordReset(e.email))\r\n  }\r\n\r\n  if (auth.success) {\r\n    return (\r\n      <Redirect to={'/auth/login'}/>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"auth\">\r\n      <form id=\"auth-restore\"  onSubmit={handleSubmit(onSubmit)} >\r\n        <Input type=\"email\"\r\n               ref={register}\r\n               errorText={errors.email?.message}\r\n               placeholder=\"example@email.com\"\r\n               label=\"Email\"/>\r\n        <button className=\"auth__btn\"><span>Send email</span></button>\r\n\r\n        {(auth.error) ? <div className='auth__error'>{auth.error}</div> : null}\r\n      </form>\r\n      <div className=\"auth__link\">\r\n        <Link to={'/auth/login'}>Remembered password</Link>\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default RestoreForm","import './auth.scss'\r\nimport React, {useEffect, useRef, useState }  from 'react'\r\nimport {Redirect, useParams} from 'react-router-dom'\r\n\r\nimport SignInForm from '../../components/Forms/SignInForm'\r\nimport SignUpForm from '../../components/Forms/SignUpForm'\r\nimport RestoreForm from '../../components/Forms/RestoreForm'\r\n\r\n\r\ninterface ParamTypes {\r\n  slug: string\r\n}\r\n\r\n\r\nconst Auth: React.FC = () => {\r\n  const vw = document.documentElement.clientWidth / 100\r\n  const $authWrap = useRef<HTMLDivElement | null>(null)\r\n  const [stateHeight, setStateHeight] = useState(35 + 'vw');\r\n\r\n  // Отрисовка нужной формы по урлу\r\n  const {slug} = useParams<ParamTypes>()\r\n\r\n  useEffect(() => {\r\n    if ($authWrap.current) {\r\n\r\n      // Анимация при изменении формы\r\n      const arrayChildren = Array.from($authWrap.current.children)\r\n      const height = arrayChildren\r\n        .map(item => item.scrollHeight)\r\n        .reduce((sum, current ) => sum + current)\r\n      setStateHeight(height / vw + 12 + 'vw')\r\n    }\r\n  },[slug, vw])\r\n\r\n  let title\r\n  let formRender\r\n  switch (slug) {\r\n    case 'login':\r\n      formRender = <SignInForm />\r\n      title = 'Login'\r\n      break\r\n    case 'registration':\r\n      formRender = <SignUpForm />\r\n      title = 'Registration'\r\n      break\r\n    case 'restore':\r\n      formRender = <RestoreForm />\r\n      title = 'Restore password'\r\n      break\r\n    default:\r\n      title = 'Login'\r\n      formRender = <Redirect to={'/auth/login'}/>\r\n  }\r\n\r\n  return (\r\n    <div ref={$authWrap} style={{height: stateHeight}} className=\"auth-wrap\">\r\n      <div className=\"auth__title\">Authorization / <span>{title}</span></div>\r\n      {formRender}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Auth","import {CardsAction, CardsActionTypes, ICard, ITodo} from '../types/cardsTypes'\r\nimport React from 'react'\r\nimport {Dispatch} from 'redux'\r\nimport {removeCardDB} from '../../functions'\r\nimport firebase from 'firebase/app'\r\nimport 'firebase/firestore';   // for cloud firestore\r\n\r\n\r\n\r\n\r\nexport function addNewCard(): CardsAction {\r\n  return {type: CardsActionTypes.ADD_NEW_CARD, payload: Date.now()}\r\n}\r\nexport function addCard(card: ICard): CardsAction {\r\n  return {type: CardsActionTypes.ADD_CARD, payload: card}\r\n}\r\n\r\nexport function removeCard(idCard: number): CardsAction {\r\n  return {type: CardsActionTypes.REMOVE_CARD, payload: idCard}\r\n}\r\n\r\nexport function addTodo(idCard: number): CardsAction {\r\n  return {type: CardsActionTypes.ADD_TODO, payload: {idCard, idTodo: Date.now()}}\r\n}\r\n\r\nexport function removeTodo(idCard: number, idTodo: number): CardsAction {\r\n  return {type: CardsActionTypes.REMOVE_TODO, payload: {idCard, idTodo}}\r\n}\r\n\r\nexport function setTitleCard(id: number, title: string): CardsAction {\r\n  return {type: CardsActionTypes.SET_TITLE, payload: {id, title}}\r\n}\r\n\r\nexport function setTitleTodo(idCard: number, idTodo: number, title: string): CardsAction {\r\n  return {type: CardsActionTypes.SET_TITLE_TODO, payload: {idCard, idTodo, title}}\r\n}\r\n\r\nexport function changePositionCard(idCard: number, x: number, y: number): CardsAction {\r\n  return {type: CardsActionTypes.CHANGE_POSITION_CARD, payload: {idCard, x, y}}\r\n}\r\n\r\nexport function setNewTodosAction(idCard: number, newTodos: ITodo[]): CardsAction {\r\n  return {type: CardsActionTypes.SET_NEW_TODOS, payload: {idCard, newTodos}}\r\n}\r\nexport function resetCards(): CardsAction {\r\n  return {type: CardsActionTypes.RESET_CARDS}\r\n}\r\n\r\nexport function changePositionCardDispatch(e: React.MouseEvent<HTMLDivElement>, elem: HTMLDivElement | null, idCard: number) {\r\n  return (dispatch: Dispatch<CardsAction>) => {\r\n    if (elem) {\r\n      const vw = document.documentElement.clientWidth / 100\r\n      const getTransformElem = elem.style.transform.replace(/[^-.,\\d]/g, '').split(',')\r\n\r\n      const startXElem = +getTransformElem[0]\r\n      const startYElem = +getTransformElem[1]\r\n      const startXMouse = e.pageX\r\n      const startYMouse = e.pageY\r\n\r\n      elem.style.zIndex = '1000'\r\n      elem.style.transition = 'none'\r\n      document.onmousemove = function (e: MouseEvent) {\r\n        const x = startXElem + (e.pageX - startXMouse) / vw\r\n        const y = startYElem + (e.pageY - startYMouse) / vw\r\n        dispatch(changePositionCard(idCard, x, y))\r\n      }\r\n\r\n      elem.onmouseup = function () {\r\n        document.onmousemove = null\r\n        elem.onmouseup = null\r\n        elem.style.zIndex = '1'\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport function removeCardDispatch(id: number) {\r\n  return (dispatch: Dispatch<CardsAction>) => {\r\n    dispatch(removeCard(id))\r\n    removeCardDB(id)\r\n  }\r\n}\r\n\r\nexport function updateCardsFromDB() {\r\n\r\n  return (dispatch: Dispatch<CardsAction>) => {\r\n    // const userEmail = firebase.auth().currentUser?.email\r\n    const userEmail = JSON.parse(localStorage.getItem('user') || sessionStorage.getItem('user') || 'undefined')?.email\r\n    const db = firebase.firestore()\r\n\r\n    if (userEmail) {\r\n      db.collection(userEmail).get().then((querySnapshot) => {\r\n        querySnapshot.forEach((doc) => {\r\n          const card: ICard = {\r\n            title: doc.data().title,\r\n            id: doc.data().id,\r\n            position: doc.data().position,\r\n            todos: doc.data().todos\r\n          }\r\n          dispatch(addCard(card))\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n}","import { ICard} from './store/types/cardsTypes'\r\nimport firebase from 'firebase/app'\r\nimport 'firebase/firestore';\r\n\r\nexport function updateCardDB(card: ICard) {\r\n  const userEmail = firebase.auth().currentUser?.email\r\n  const db = firebase.firestore()\r\n  if (userEmail) {\r\n    const userCard = db.collection(userEmail).doc(String(card.id))\r\n    try {\r\n      userCard.set(card)\r\n    } catch (e) {\r\n      console.error(\"Error updating document: \", e);\r\n    }\r\n  }\r\n}\r\nexport function removeCardDB(idCard: number) {\r\n  const userEmail = firebase.auth().currentUser?.email\r\n  const db = firebase.firestore()\r\n  if (userEmail) {\r\n    try {\r\n      db.collection(userEmail).doc(String(idCard)).delete()\r\n    } catch (e) {\r\n      console.error(\"Error removing card: \", e);\r\n    }\r\n  }\r\n}\r\n\r\n// export function updateCardsFromDB() {\r\n//   const userEmail = firebase.auth().currentUser?.email\r\n//   const db = firebase.firestore()\r\n//\r\n//   if (userEmail) {\r\n//     // const userCards = db.collection(userEmail)\r\n//     // userCards.get()\r\n//     //   .then((data) => {\r\n//     //     console.log(data)\r\n//     //   })\r\n//     //   .catch((error) => {\r\n//     //     console.log(\"Error getting documents: \", error);\r\n//     //   });\r\n//     // console.log(userCards)\r\n//\r\n//     db.collection(userEmail).get().then((querySnapshot) => {\r\n//       querySnapshot.forEach((doc) => {\r\n//         // doc.data() is never undefined for query doc snapshots\r\n//\r\n//         console.log(doc.id, \" => \", doc.data());\r\n//       });\r\n//     });\r\n//   }\r\n// }","import React  from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport {addNewCard} from '../../store/actions/cardsActions'\r\nimport './plus.scss'\r\nimport {useTypedSelector} from '../../hooks/useTypedSelector'\r\n\r\nconst Plus: React.FC = () => {\r\n  const cards = useTypedSelector(state => state.cards.cards)\r\n  const dispatch = useDispatch()\r\n  const cls = new Set(['add'])\r\n\r\n  cards.forEach(card => {\r\n    if (card.title.trim() === '') {\r\n      cls.add('disabled')\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div className={Array.from(cls).join(' ')} onClick={() => dispatch(addNewCard())} title=\"Add card\">\r\n      <div className='add__plus'>\r\n        <svg viewBox=\"0 0 448 448\"><path d=\"m408 184h-136c-4.417969 0-8-3.582031-8-8v-136c0-22.089844-17.910156-40-40-40s-40 17.910156-40 40v136c0 4.417969-3.582031 8-8 8h-136c-22.089844 0-40 17.910156-40 40s17.910156 40 40 40h136c4.417969 0 8 3.582031 8 8v136c0 22.089844 17.910156 40 40 40s40-17.910156 40-40v-136c0-4.417969 3.582031-8 8-8h136c22.089844 0 40-17.910156 40-40s-17.910156-40-40-40zm0 0\"></path></svg>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Plus","import React from 'react'\r\nimport './logout.scss'\r\nimport {useDispatch} from 'react-redux'\r\nimport {signOut} from '../../store/actions/authActions'\r\nimport { resetCards } from '../../store/actions/cardsActions'\r\n\r\nconst Logout: React.FC = () => {\r\n  const dispatch = useDispatch()\r\n  const logout = () => {\r\n    dispatch(signOut())\r\n    dispatch(resetCards())\r\n  }\r\n\r\n  return (\r\n    <div className=\"logout\"\r\n         title=\"Change account\"\r\n         onClick={logout}>\r\n      <svg viewBox=\"0 0 24 24\">\r\n        <path d=\"M16.56,5.44L15.11,6.89C16.84,7.94 18,9.83 18,12A6,6 0 0,1 12,18A6,6 0 0,1 6,12C6,9.83 7.16,7.94 8.88,6.88L7.44,5.44C5.36,6.88 4,9.28 4,12A8,8 0 0,0 12,20A8,8 0 0,0 20,12C20,9.28 18.64,6.88 16.56,5.44M13,3H11V13H13\"></path>\r\n      </svg>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Logout","import React from 'react'\r\nimport {ITodo} from '../../store/types/cardsTypes'\r\nimport {useDispatch} from 'react-redux'\r\nimport {removeTodo, setTitleTodo} from '../../store/actions/cardsActions'\r\n\r\ninterface Props {\r\n  todoDB: ITodo\r\n  cardID: number\r\n\r\n}\r\n\r\nconst CardItem: React.FC<Props> = ({todoDB, cardID}) => {\r\n  const dispatch = useDispatch()\r\n\r\n\r\n  return (\r\n    <>\r\n      <input type='text'\r\n             onChange={(e) => dispatch(setTitleTodo(cardID, todoDB.id, e.target.value))}\r\n             value={todoDB.title}\r\n             placeholder=\"New task\"/>\r\n      <div className='card__item_shadow'></div>\r\n      <div className='card__item_position'\r\n           data-movable-handle={true}\r\n           title=\"Change task priority\">\r\n        <svg viewBox=\"0 0 512 512\">\r\n          <path d=\"M31.9 125.9h73.8V52.2H31.9v73.7zm84.1 20.9H21.4c-5.8 0-10.4-4.7-10.4-10.4V41.7c0-5.8 4.7-10.4 10.4-10.4H116c5.8 0 10.4 4.7 10.4 10.4v94.6c.1 5.8-4.6 10.5-10.4 10.5zm374.6-47.3H166.1c-5.8 0-10.4-4.7-10.4-10.4 0-5.8 4.7-10.4 10.4-10.4h324.5c5.8 0 10.4 4.7 10.4 10.4s-4.7 10.4-10.4 10.4zM31.9 292.9h73.8v-73.8H31.9v73.8zm84.1 20.8H21.4c-5.8 0-10.4-4.7-10.4-10.4v-94.6c0-5.8 4.7-10.4 10.4-10.4H116c5.8 0 10.4 4.7 10.4 10.4v94.6c.1 5.8-4.6 10.4-10.4 10.4zm374.6-47.3H166.1c-5.8 0-10.4-4.7-10.4-10.4 0-5.8 4.7-10.4 10.4-10.4h324.5c5.8 0 10.4 4.7 10.4 10.4 0 5.8-4.7 10.4-10.4 10.4zM31.9 459.8h73.8V386H31.9v73.8zm84.1 20.9H21.4c-5.8 0-10.4-4.7-10.4-10.4v-94.6c0-5.8 4.7-10.4 10.4-10.4H116c5.8 0 10.4 4.7 10.4 10.4v94.6c.1 5.7-4.6 10.4-10.4 10.4zm374.6-47.3H166.1c-5.8 0-10.4-4.7-10.4-10.4s4.7-10.4 10.4-10.4h324.5c5.8 0 10.4 4.7 10.4 10.4s-4.7 10.4-10.4 10.4z\"/>\r\n        </svg>\r\n      </div>\r\n\r\n      <div className=\"card__item_delete\"\r\n           onClick={() => dispatch(removeTodo(cardID, todoDB.id))}\r\n           title=\"Delete task\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\"\r\n             viewBox=\"0 0 240 240\">\r\n          <path d=\"M120 240c66.168 0 120-53.831 120-120S186.168 0 120 0 0 53.832 0 120s53.832 120 120 120zm0-210c49.626 0 90 40.374 90 90s-40.374 90-90 90-90-40.374-90-90 40.374-90 90-90zM69.144 149.644L98.787 120 69.144 90.356l21.213-21.213L120 98.787l29.644-29.644 21.213 21.213L141.213 120l29.643 29.644-21.213 21.213L120 141.213l-29.644 29.643-21.212-21.212z\"/>\r\n        </svg>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CardItem","import React from 'react'\r\nimport {ITodo} from '../../store/types/cardsTypes'\r\nimport CardItem from './CardItem'\r\nimport {List, arrayMove, arrayRemove } from 'react-movable'\r\nimport {useTypedSelector} from '../../hooks/useTypedSelector'\r\nimport {useDispatch} from 'react-redux'\r\nimport {setNewTodosAction} from '../../store/actions/cardsActions'\r\n\r\ninterface Props {\r\n  idCard: number\r\n}\r\n\r\nconst CardList: React.FC<Props> = ({idCard}) => {\r\n  const dispatch = useDispatch()\r\n  const todos: ITodo[] = useTypedSelector(state => state.cards.cards.filter(card => card.id === idCard))[0].todos\r\n\r\n  return (\r\n    <List\r\n      values={todos}\r\n      removableByMove\r\n      onChange={({oldIndex, newIndex}) => {\r\n        (newIndex === -1)\r\n          ? dispatch(setNewTodosAction(idCard, arrayRemove(todos, oldIndex)))\r\n          : dispatch(setNewTodosAction(idCard, arrayMove(todos, oldIndex, newIndex)))\r\n      }}\r\n      renderList={({children, props}) => <ul {...props}>{children}</ul>}\r\n      renderItem={({\r\n                     value,\r\n                     props,\r\n                     isSelected,\r\n                     isDragged,\r\n                     isOutOfBounds}) => (\r\n        <li {...props}\r\n            style={{\r\n              ...props.style,\r\n              background: isOutOfBounds ? '#FC4B50' : '#0E1127',\r\n              zIndex: isDragged || isSelected ? 9 : 'auto',\r\n              animationName: isDragged || isSelected ? 'none' : 'card-item',\r\n              opacity: isDragged ? 0.8 : 1,\r\n            }}\r\n            className=\"card__item\">\r\n          {value && <CardItem cardID={idCard} todoDB={value}/>}\r\n        </li>\r\n      )}\r\n    />\r\n  )\r\n}\r\n\r\nexport default CardList","import React, {useState, useEffect, useRef} from 'react'\r\nimport './card.scss'\r\nimport CardList from '../CardList/CardList'\r\nimport { useDispatch } from 'react-redux'\r\nimport {\r\n  addTodo,\r\n  changePositionCardDispatch,\r\n  removeCardDispatch,\r\n  setTitleCard\r\n} from '../../store/actions/cardsActions'\r\nimport { ICard } from '../../store/types/cardsTypes'\r\nimport { updateCardDB } from '../../functions'\r\nimport { useDebounce } from '../../hooks/useDebounce'\r\n\r\n\r\ninterface Props {\r\n  cardDB: ICard\r\n}\r\n\r\nconst Card: React.FC<Props> = ({cardDB}) => {\r\n  const [styles, setStyles] = useState({})\r\n  const debouncedUpdateCard = useDebounce(cardDB, 500);\r\n  const dispatch = useDispatch()\r\n\r\n  const $card = useRef<HTMLDivElement | null>(null)\r\n\r\n  useEffect(() => {\r\n    // отключаем стандартный drag\r\n    if ($card) $card.current!.ondragstart = () => false\r\n  },[])\r\n\r\n  useEffect(() => {\r\n    // Добавил немного анимации при обновлении страницы\r\n    setStyles({ transform: `translate(${cardDB.position.x}vw,${cardDB.position.y}vw)`, opacity: 1 })\r\n  },[cardDB.position])\r\n\r\n  // При любом изменении карточки срабатывает debounce и если больше задержек не будет, обновляем на сервере\r\n  useEffect(() => {\r\n    updateCardDB(cardDB)\r\n  },[debouncedUpdateCard]);\r\n\r\n  return (\r\n    <div ref={$card}\r\n         style={styles}\r\n         className=\"card\">\r\n      <div className='card__title'>\r\n        <input type='text'\r\n               onChange={(e) => dispatch(setTitleCard(cardDB.id, e.target.value))}\r\n               value={cardDB.title}\r\n               maxLength={21}\r\n               placeholder=\"Enter the name of the card\"/>\r\n        <div className='card__position'\r\n             onMouseDown={(e) => dispatch(changePositionCardDispatch(e, $card.current, cardDB.id))}\r\n             title=\"Change card location\">\r\n          <svg viewBox=\"0 0 384.97 384.97\">\r\n            <path d=\"M12.03 84.212h360.909c6.641 0 12.03-5.39 12.03-12.03a12.04 12.04 0 0 0-12.03-12.03H12.03C5.39 60.152 0 65.541 0 72.182s5.39 12.03 12.03 12.03zm360.909 96.243H12.03c-6.641 0-12.03 5.39-12.03 12.03a12.04 12.04 0 0 0 12.03 12.03h360.909c6.641 0 12.03-5.39 12.03-12.03s-5.389-12.03-12.03-12.03zm0 120.303H12.03c-6.641 0-12.03 5.39-12.03 12.03a12.04 12.04 0 0 0 12.03 12.03h360.909c6.641 0 12.03-5.39 12.03-12.03s-5.389-12.03-12.03-12.03z\"/>\r\n          </svg>\r\n        </div>\r\n        <div className=\"card__add\"\r\n             onClick={() => dispatch(addTodo(cardDB.id))}\r\n             title=\"Add task\">\r\n          <svg viewBox=\"0 0 448 448\">\r\n            <path d=\"m408 184h-136c-4.417969 0-8-3.582031-8-8v-136c0-22.089844-17.910156-40-40-40s-40 17.910156-40 40v136c0 4.417969-3.582031 8-8 8h-136c-22.089844 0-40 17.910156-40 40s17.910156 40 40 40h136c4.417969 0 8 3.582031 8 8v136c0 22.089844 17.910156 40 40 40s40-17.910156 40-40v-136c0-4.417969 3.582031-8 8-8h136c22.089844 0 40-17.910156 40-40s-17.910156-40-40-40zm0 0\"></path>\r\n          </svg>\r\n        </div>\r\n        <div className=\"card__delete\"\r\n             onClick={() => dispatch(removeCardDispatch(cardDB.id))}\r\n             title=\"Delete card\">\r\n          <svg viewBox=\"0 0 240 240\">\r\n            <path d=\"M120 240c66.168 0 120-53.831 120-120S186.168 0 120 0 0 53.832 0 120s53.832 120 120 120zm0-210c49.626 0 90 40.374 90 90s-40.374 90-90 90-90-40.374-90-90 40.374-90 90-90zM69.144 149.644L98.787 120 69.144 90.356l21.213-21.213L120 98.787l29.644-29.644 21.213 21.213L141.213 120l29.643 29.644-21.213 21.213L120 141.213l-29.644 29.643-21.212-21.212z\"/>\r\n          </svg>\r\n        </div>\r\n      </div>\r\n\r\n      <CardList idCard={cardDB.id}/>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Card","import {useEffect, useState } from \"react\"\r\n\r\nexport function useDebounce(value: any, delay: number) {\r\n  const [debouncedValue, setDebouncedValue] = useState(value)\r\n\r\n  useEffect(\r\n    () => {\r\n      const handler = setTimeout(() => {\r\n        setDebouncedValue(value)\r\n      }, delay)\r\n\r\n      return () => clearTimeout(handler)\r\n    },\r\n    [value, delay]\r\n  )\r\n\r\n  return debouncedValue\r\n}","import React, { useEffect }  from 'react'\r\nimport Plus from '../../components/Plus/Plus'\r\nimport Logout from '../../components/Logout/Logout'\r\nimport Card from '../../components/Card/Card'\r\nimport {useTypedSelector} from '../../hooks/useTypedSelector'\r\nimport {useDispatch} from 'react-redux'\r\nimport { updateCardsFromDB } from '../../store/actions/cardsActions'\r\n\r\nconst Home: React.FC = () => {\r\n  const dispatch = useDispatch()\r\n  const cards = useTypedSelector(state => state.cards.cards)\r\n  useEffect(() => {\r\n    dispatch(updateCardsFromDB())\r\n  },[])\r\n  return (\r\n    <>\r\n      <Logout/>\r\n      <Plus/>\r\n      {cards.map(card => <Card key={card.id} cardDB={card}/>)}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Home","import React from 'react'\nimport {BrowserRouter, Switch, Route, Redirect} from 'react-router-dom'\nimport './scss/App.scss'\nimport Auth from './pages/Auth/Auth'\nimport {useTypedSelector} from './hooks/useTypedSelector'\n\nimport Home from './pages/Home/Home'\n\nfunction App() {\n  const user = useTypedSelector(state => state.auth.user)\n  return (\n    <BrowserRouter  basename=\"/organizer\">\n      <div className=\"App wrapper\">\n\n        {(user)\n          ? (\n            <Switch>\n              <Route path={'/'} exact component={Home}/>\n              <Redirect to={'/'}/>\n            </Switch>\n          )\n          : (\n            <Switch>\n              <Route path={'/auth/:slug'} component={Auth}/>\n              <Redirect to={'/auth/login'}/>\n            </Switch>\n          )}\n\n      </div>\n    </BrowserRouter>\n\n  )\n}\n\nexport default App","import {AuthAction, AuthActionTypes, AuthState } from \"../types/authTypes\"\r\n\r\nconst initialState : AuthState = {\r\n  user: JSON.parse(localStorage.getItem('user') || sessionStorage.getItem('user') || 'false'),\r\n  error: null,\r\n  success: null,\r\n}\r\n\r\nexport const authReducer = (state = initialState, action: AuthAction): AuthState => {\r\n  switch (action.type) {\r\n    case AuthActionTypes.CHANGE_USER:\r\n      return {...state, user: action.payload}\r\n    case AuthActionTypes.ERROR:\r\n      return {...state, error: action.payload}\r\n    case AuthActionTypes.SUCCESS:\r\n      return {...state, success: action.payload}\r\n    default:\r\n      return state\r\n  }\r\n}","import {CardsAction, CardsActionTypes, CardsState, ITodo, ICard} from '../types/cardsTypes'\r\n\r\n\r\nconst initialTodo : ITodo = {\r\n  title: '',\r\n  id: Date.now()\r\n}\r\nconst initialCard : ICard = {\r\n  title: '',\r\n  id: Date.now(),\r\n  position: {x: 0, y: 10},\r\n  todos: []\r\n}\r\n\r\nconst initialState: CardsState = {\r\n  cards: []\r\n}\r\n\r\nexport const cardsReducer = (state = initialState, action: CardsAction): CardsState => {\r\n  switch (action.type) {\r\n\r\n\r\n    case CardsActionTypes.ADD_NEW_CARD:\r\n      return {...state, cards: [...state.cards, {...initialCard, id: action.payload}]}\r\n\r\n    case CardsActionTypes.ADD_CARD:\r\n      const cardExist: boolean = state.cards.some(card => card.id === action.payload.id)\r\n      if (cardExist) return state\r\n      else return {...state, cards: [...state.cards, {...action.payload}]}\r\n\r\n\r\n    case CardsActionTypes.REMOVE_CARD:\r\n      return {...state, cards: state.cards.filter(item => item.id !== action.payload)}\r\n\r\n    case CardsActionTypes.ADD_TODO:\r\n      const newCardTodo = state.cards.map( (item) => (item.id === action.payload.idCard)\r\n        ? {...item, todos: [...item.todos, {...initialTodo, id: action.payload.idTodo}]}\r\n        : item)\r\n      return {...state, cards: newCardTodo}\r\n    case CardsActionTypes.REMOVE_TODO:\r\n      const newCardRemoveTodo = state.cards.map( (item) => (item.id === action.payload.idCard)\r\n        ? {...item, todos: item.todos.filter(i => i.id !== action.payload.idTodo)}\r\n        : item)\r\n      return {...state, cards: newCardRemoveTodo}\r\n\r\n    case CardsActionTypes.SET_TITLE:\r\n      const newCardTitle = state.cards.map( (item) => (item.id === action.payload.id)\r\n        ? {...item, title: action.payload.title}\r\n        : item)\r\n      return {...state, cards: newCardTitle}\r\n    case CardsActionTypes.SET_TITLE_TODO:\r\n      const newTitleTodo = state.cards.map( (item) => (item.id === action.payload.idCard)\r\n        ? {...item, todos: item.todos.map((i) => (i.id === action.payload.idTodo) ? {...i, title: action.payload.title}: i)}\r\n        : item)\r\n      return {...state, cards: newTitleTodo}\r\n\r\n    case CardsActionTypes.CHANGE_POSITION_CARD:\r\n      const newCardPosition = state.cards.map( (item) => (item.id === action.payload.idCard)\r\n        ? {...item, position: {x: action.payload.x, y: action.payload.y}}\r\n        : item)\r\n      return {...state, cards: newCardPosition}\r\n\r\n    case CardsActionTypes.SET_NEW_TODOS:\r\n      const newCardTodos = state.cards.map( (card) => (card.id === action.payload.idCard)\r\n        ? {...card, todos: action.payload.newTodos}\r\n        : card)\r\n      return {...state, cards: newCardTodos}\r\n\r\n    case CardsActionTypes.RESET_CARDS:\r\n      return {...state, cards: []}\r\n\r\n    default:\r\n      return state\r\n  }\r\n}","import { applyMiddleware, combineReducers, createStore } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport {authReducer} from './reducers/authReducer'\r\nimport {cardsReducer} from './reducers/cardsReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    cards: cardsReducer\r\n})\r\nexport type RootState = ReturnType<typeof rootReducer>\r\n\r\nexport const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)))","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {Provider} from 'react-redux'\nimport firebase from 'firebase/app'\nimport App from './App'\nimport {store} from './store/configureStore'\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBljvy-qld1hNxMrGMf8Ysk2qelsJYUX2Y\",\n  authDomain: \"db--test.firebaseapp.com\",\n  projectId: \"db--test\",\n  storageBucket: \"db--test.appspot.com\",\n  messagingSenderId: \"570204101429\",\n  appId: \"1:570204101429:web:fdb4fde21dd0a2cfe1ca7c\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\n// console.log(firebase)\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>\n  ,\n  document.getElementById('root')\n)"],"sourceRoot":""}